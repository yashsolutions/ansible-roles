---

- name: include keys
  include_vars: ../secrets/ssh_keys.yml

- name: Install python-software-properties
  apt:
    name: python-software-properties
    state: installed
    update_cache: yes
  become: true

- name: Install python-pycurl
  apt: name=python-pycurl state=installed
  become: true

- name: Add jenkins apt-key
  apt_key: data="{{ lookup('file', 'jenkins-ci.org.key') }}" state=present
  become: true

- name: Add Jenkins repository
  apt_repository: repo='deb http://pkg.jenkins.io/debian-stable binary/' state=present update_cache=yes
  become: true

- name: install jenkins
  apt:
    name: jenkins
    update_cache: yes
  become: true

- name: create folder for keys
  file: 
    path: /var/lib/jenkins/.ssh 
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0700
  become: true

- name: setup private key
  copy:
    content: "{{ ssh_keys.jenkins.private }}"
    dest: /var/lib/jenkins/.ssh/id_rsa
    owner: jenkins
    group: jenkins
    mode: 0400
  become: true

- name: init jenkins repo
  command: git init
  become: true
  become_user: jenkins
  args:
    chdir: /var/lib/jenkins

- name: set remote for repo
  command: git remote add origin git@github.com:yashsolutions/jenkins-backup.git
  become: true
  become_user: jenkins
  args:
    chdir: /var/lib/jenkins
  ignore_errors: yes

- name: set remote for repo
  command: git remote set-url origin git@github.com:yashsolutions/jenkins-backup.git
  become: true
  become_user: jenkins
  args:
    chdir: /var/lib/jenkins

- name: check service
  service:
    name: jenkins
    state: restarted
  become: true

- name: setup nginx proxy
  apt:
    name: nginx
    update_cache: yes
  become: true

- name: configure nginx proxy
  copy:
    src: default
    dest: /etc/nginx/sites-available/default
  become: true

- name: restart proxy
  service:
    name: nginx
    state: restarted
  become: true

- name: add jenkins to docker group
  command: usermod -a -G docker jenkins
  become: true
