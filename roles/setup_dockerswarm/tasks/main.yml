---
# Redquired creds
- name: Include docker registry credentials
  include_vars: ../secrets/docker_registry_creds.yml

# Variables setup
- name: Include os-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

# Makes sure that the repo cache is fresh
- name: Update APT cache
  apt: update_cache=yes
  when: ansible_os_family == 'Debian'
  changed_when: false

# with_indexed_items is required as a workaround for this issue:
# https://github.com/ansible/ansible-modules-core/issues/1178
- name: Install python-pip.
  package:
    name: "{{ item.1 }}"
    state: present
  with_indexed_items: "{{ python_pip_packages }}"
  when: (not skip_docker_py) or (ansible_os_family == 'Debian'
    and ansible_python_version | version_compare('2.6.0', '>=')
    and ansible_python_version | version_compare('2.7.9', '<'))

- name: Install the Python SNI support packages.
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ python_sni_support_packages }}"
  when: ansible_os_family == 'Debian'
    and ansible_python_version | version_compare('2.6.0', '>=')
    and ansible_python_version | version_compare('2.7.9', '<')

# There extra pip dependencies are needed to add SSL SNI support to
# Python version prior to 2.7.9. SNI support is needed by the Ansible
# apt_key module.
- name: Install the Python SNI python-pip dependencies.
  pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ python_sni_pip_dependencies }}"
  when: ansible_os_family == 'Debian'
    and ansible_python_version | version_compare('2.6.0', '>=')
    and ansible_python_version | version_compare('2.7.9', '<')

# Install the Docker Engine
- include: docker_engine.yml
  when: not skip_engine

# Install docker-py
- include: docker_py.yml
  when: not skip_docker_py

# Adds the Docker admin users to the Docker group
- include: docker_group.yml
  when: not skip_group

# Setup the Docker Swarm Cluster
- include: swarm_cluster.yml
  when: not skip_swarm

- name: login into docker registry
  when: docker_registry_login
  command: "docker login -u {{ docker_registry_user }} -p {{ docker_registry_pass }} {{ docker_registry_name }}"

- name: create overlay network for services
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"
  command: docker network create --driver overlay --opt encrypted --ip-range 10.254.0.0/16 --subnet 10.254.0.0/16 services
  ignore_errors: yes

- name: add user to group
  command: usermod -a -G docker ansible
  become: true
